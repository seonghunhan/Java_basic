처음 시작할 때 
https://medium.com/duckuism/intellij%EC%97%90%EC%84%9C-eclipse-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-import-%ED%95%98%EA%B8%B0-9e222b5548db
참고해서 IDE에서 인텔리제이 와 이클립스 다루기(이거는 2019버전 인텔리제이)

- 인텔리제이를 사용한 이유
- 이클립스 파일을 인텔리제이에 가져온 이유
- 인텔리제이와 이클립스의 차이

https://www.jetbrains.com/help/idea/migrating-from-eclipse-to-intellij-idea.html#user_interface
인텔리제이 사이트에서 추천방법

https://willbesoon.tistory.com/191
이걸로 해결 (너카톡 본게임부터 시작)

배열

- 인덱스를 이용해서 자료형이 같은 데이터를 관리
- 배열을 구성하는 데이터의 자료형에 따라서 배열의 메모리 크기가 결정


- 배열도 변수와 마찬가지로 선언과 초기화 과정을 거쳐 사용
(배열 사용 후 초기화)
(배열 선언과 동시에 초기화)

- 배열 선언시 안에있는 변수의 타입은 미리 선언한걸로 넣어줘야함
- new라는 연산자를 이용해서 배열의 크기를 선언

위에 할 때 배열강의노트 밑에꺼 ㄱㄱ
(배열 선언 후 초기화)
public class helloworld {
    public static void main(String[] args) {

        int[] arr1 = new int[5]; // 배열 선언 단계
        arr1[0] = 100;
        arr1[1] = 200;
        arr1[2] = 300;
        arr1[3] = 400;
        arr1[4] = 500;

        System.out.println("arr[0] : " + arr1[0]);
        System.out.println("arr[1] : " + arr1[1]);
        System.out.println("arr[2] : " + arr1[2]);
    }
}

->
arr[0] : 100
arr[1] : 200
arr[2] : 300

(배열 선언과 동시에 초기화)
- 중괄호 사용 유의

public class helloworld {
    public static void main(String[] args) {

        int[] arr2 = {10, 20, 30}; // 배열 선언 단계

        System.out.println("arr[0] : " + arr2[0]);
        System.out.println("arr[1] : " + arr2[1]);
        System.out.println("arr[2] : " + arr2[2]);
    }
}


-> 
arr[0] : 10
arr[0] : 20
arr[0] : 30

* 어떤 언어는 배열의 크기를 동적으로 줄였다 늘렸다 하는 반면에 자바는 한번 선언할 때 크기가 정해지면 바뀔 수 없다
* 

---------------------
배열과메모리 강의노트 3번째장

배열 i(변수)의 주소는 첫번째 인덱스(10, i[0])의 메모리주소가 들어간다


배열 길이 함수부터 레퍼런스까지 강의노트4번째장 스샷 ㄱ

- 배열을 복사할 때 값들은 복사되지만 메모리는 같지 않다
- 배열1,2는 같기때문에 레퍼런스가 같음

다차원배열
-> 2차원까지는 사용하지만 3차원부터는 메모리를 많이 차지하기 때문에 잘 사용하지 않는다


-------------------------------------------------------

조건문 시작!!!!

양자택일 (주로 if)
다자택일 (주로 switch)

if(조건식)
조건문이 true일경우 실행
else if를 통해 다자택일도 가능


switch
비교대상이 되는 결과값과 선택사항이 많을 경우 주로 사용한다

위에꺼할때 인텔리제이 if클래스 실행

-----------------------------------------------------------
for, while, do while 시작!!!!


for (지역변수 ; 조건문 ; 증감){
	실행문
}

for문은 안에서 지역변수 i를 만들고 사용하지만
while은 밖에서 변수를 사용한다
- 조건문이 true이면 반복

do while은 조건 결과에 상관없이 최초한번은 무조건 실행

반복문 강의노트 복붙 ㄱㄱ

인텔리제이 forwhile도 ㄱㄱ



-----------------------------------------------------------------
객체 지향 프로그래밍이란???

프로그램에서의 객체는 눈에 보이지 않지만 하나의 기능들을 객체라고 부른다

객체를 만들기위한 틀을 클래스라고 한다
개발자들은 클래스만 만들고 필요에 따라 클래스를 뽑아 내는것
사용하지 않는 객체(누구와도 연동되지 않는)는 GC가(가비지 컬렉터) 회수한다
3페이지 파란 그랜저가 클래스임

------------------------------------------------------------------

클래스 제작과 객체 생성

클래스는 속성(멤버변수)와 기능(메서드) == 함수로 구성된다.


객체지향 프로그램을 만들어 놓으면 모듈화하여 다른곳에서 쉽게 사용할 수 있음

public 은 접근제한자인데 나중에 ㄱㄱ함

void는 반환값이 없다는것
반환값이 있고 그게 string형이다 그럼 메서드 앞에 string써야함
그리고 return으로 "~~~" 처럼 string을 써줘야함

외부에서 이 클래스를 이용해서 객체를 만들때 (스샷에 왼쪽이 객체를 만드는과정)(오른쪽이 클래스)
가장 먼저 호출받는게 생성자이고
생성자는 클래스와 이름이 같고, 반환형이 없다
생성자는 여러개 만들수도 있다
빈공간으로 놔두기도 한다

객체 3번째장 볼때 너카톡에 스샷찍어둔거 ㄱㄱ
new가 객체를 생성할 때 사용하는 명령어

두번째 스샷은 객체를 생성할때 파라메터도 주는것
그리고 적절한 생성자에 알아서 들어간다


---------------------------------------------------------------------

메서드

첫번 째 장

접근자 : 이 메서드의 접근을 어떻게하면 허용할지 안할지 결정한다
반환형 : 결과물을 호출부쪽으로 반환하는 것
	void는 반환값이 없다는 것
메서드 이름  : camel기법으로 첫문자는 소문자 그다음은 대문자로 표기
		동사를 먼저쓰고 다음은 명사로 쓰기



두번 째 장
필요시에만 사용한다


세번 째 장
중복메서드(같은 이름의 메서드)는 허용하지만 매개변수의 타입에서 차이가 있어야한다.


네번 째 장
접근자
public 외부에서 접근가능
private는 외부에서 접근 불가능하고 내부에서만 사용 가능


 












